name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DEBUG_SQL: ${{ secrets.DJANGO_DEBUG_SQL }}
      ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      DB_ENGINE: ${{ secrets.DJANGO_DB_ENGINE }}
      DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
      EMAIL_BACKEND: ${{ secrets.DJANGO_EMAIL_BACKEND }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DJANGO_DEFAULT_FROM_EMAIL }}
      CELERY_BROKER_URL: ${{ secrets.DJANGO_CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.DJANGO_CELERY_RESULT_BACKEND }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install coverage codecov

    - name: Run tests with coverage
      run: |
        coverage run --source=backend manage.py test
        coverage xml
        coverage report

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: JuliiaZhuravleva/python-diploma
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false