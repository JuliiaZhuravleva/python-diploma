name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      CI: "True"
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY || 'django-insecure-ci-testing-key' }}
      DEBUG: ${{ secrets.DJANGO_DEBUG || 'True' }}
      DEBUG_SQL: ${{ secrets.DJANGO_DEBUG_SQL || 'False' }}
      ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS || 'localhost,127.0.0.1' }}
      DB_ENGINE: ${{ secrets.DJANGO_DB_ENGINE || 'django.db.backends.sqlite3' }}
      DB_NAME: ${{ secrets.DJANGO_DB_NAME || 'db.sqlite3' }}
      EMAIL_BACKEND: ${{ secrets.DJANGO_EMAIL_BACKEND || 'django.core.mail.backends.console.EmailBackend' }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DJANGO_DEFAULT_FROM_EMAIL || 'your-email@example' }}
      CELERY_BROKER_URL: ${{ secrets.DJANGO_CELERY_BROKER_URL || 'redis://localhost:6379/0' }}
      CELERY_RESULT_BACKEND: ${{ secrets.DJANGO_CELERY_RESULT_BACKEND || 'redis://localhost:6379/0' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install coverage codecov pytest pytest-django

      - name: Debug info
        run: |
          echo "Python version:"
          python --version
          echo "Django version:"
          python -c "import django; print(django.get_version())"
          echo "Installed packages:"
          pip list
          echo "Current directory:"
          pwd
          echo "Directory listing:"
          ls -la
          echo "Python path:"
          python -c "import sys; print(sys.path)"

      - name: Run migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          echo "Running tests with pytest..."
          python -m pytest -v backend/tests/
          echo "Running tests with Django test runner..."
          coverage run --source=backend manage.py test

      - name: Generate coverage report
        run: |
          coverage xml
          coverage report

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true