name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      CI: "True"
      DJANGO_SETTINGS_MODULE: order_service.settings
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DEBUG_SQL: ${{ secrets.DJANGO_DEBUG_SQL }}
      ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      DB_ENGINE: ${{ secrets.DJANGO_DB_ENGINE }}
      DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
      EMAIL_BACKEND: ${{ secrets.DJANGO_EMAIL_BACKEND }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DJANGO_DEFAULT_FROM_EMAIL }}
      CELERY_BROKER_URL: ${{ secrets.DJANGO_CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.DJANGO_CELERY_RESULT_BACKEND }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage codecov pytest pytest-django

      - name: Show envs (debug)
        run: |
          echo "SECRET_KEY=${SECRET_KEY}"
          echo "DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}"

      - name: Run migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: |
          python -m pytest -v backend/tests/
          coverage run --source=backend manage.py test

      - name: Generate coverage report
        run: |
          coverage xml
          coverage report

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true