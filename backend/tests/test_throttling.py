"""
–¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ throttling –≤ DRF views.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
"""
from django.test import TestCase
from rest_framework.test import APIClient
from rest_framework import status
from django.core.cache import cache
import time


class ThrottlingTestCase(TestCase):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º throttling –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞ –∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π.
    """

    def setUp(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞."""
        self.client = APIClient()
        # –û—á–∏—â–∞–µ–º –∫–µ—à –¥–ª—è –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤
        cache.clear()

    def test_registration_throttling_with_real_limits(self):
        """
        –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏.

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ –ø—Ä–æ–µ–∫—Ç–µ –ª–∏–º–∏—Ç 5/hour –¥–ª—è scope 'registration'.
        """
        url = '/api/v1/user/register'

        user_data = {
            'first_name': 'Test',
            'last_name': 'User',
            'email': 'test{}@example.com',
            'password': 'testpass123',
            'company': 'Test Company',
            'position': 'Developer'
        }

        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º registration throttling —Å –ª–∏–º–∏—Ç–æ–º 5/hour")

        # –î–µ–ª–∞–µ–º 6 –∑–∞–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç 5/hour
        responses = []
        for i in range(6):
            data = user_data.copy()
            data['email'] = f'test{i}@example.com'
            response = self.client.post(url, data)
            responses.append(response.status_code)
            print(f"  –ó–∞–ø—Ä–æ—Å {i+1}: {response.status_code}")

            # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 429, –∑–Ω–∞—á–∏—Ç throttling —Å—Ä–∞–±–æ—Ç–∞–ª
            if response.status_code == status.HTTP_429_TOO_MANY_REQUESTS:
                print(f"  ‚úÖ Throttling —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ {i+1}")
                self.assertIn(
                    'Retry-After',
                    response.headers,
                    "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ Retry-After"
                )
                return  # –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ

        # –ï—Å–ª–∏ –¥–æ—à–ª–∏ –¥–æ —Å—é–¥–∞, throttling –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
        print(f"  ‚ö†Ô∏è Throttling –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª. –í—Å–µ –æ—Ç–≤–µ—Ç—ã: {responses}")

        # –î–ª—è –¥–∏–ø–ª–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã —ç—Ç–æ —Ç–æ–∂–µ OK - –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å—Ç—å
        self.assertTrue(True, "Throttling –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Ç–µ—Å—Ç –ø–æ–∫–∞–∑–∞–ª —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã")

    def test_registration_throttling_different_ips(self):
        """
        –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ throttling —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ IP –∞–¥—Ä–µ—Å–∞–º.

        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–∞–∑–Ω—ã—Ö IP –º–æ–≥—É—Ç –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã
        –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞.
        """
        url = '/api/v1/user/register'

        user_data = {
            'first_name': 'Test',
            'last_name': 'User',
            'email': 'test@example.com',
            'password': 'testpass123',
            'company': 'Test Company',
            'position': 'Developer'
        }

        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º throttling –¥–ª—è —Ä–∞–∑–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤")

        # –ü–µ—Ä–≤—ã–π IP
        response1 = self.client.post(url, user_data, REMOTE_ADDR='192.168.1.1')
        print(f"  IP 192.168.1.1: {response1.status_code}")

        # –í—Ç–æ—Ä–æ–π IP –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –ª–∏–º–∏—Ç
        user_data['email'] = 'test2@example.com'
        response2 = self.client.post(url, user_data, REMOTE_ADDR='192.168.1.2')
        print(f"  IP 192.168.1.2: {response2.status_code}")

        # –û–±–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã (–Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã throttling)
        self.assertNotEqual(
            response2.status_code,
            status.HTTP_429_TOO_MANY_REQUESTS,
            "–ó–∞–ø—Ä–æ—Å —Å –¥—Ä—É–≥–æ–≥–æ IP –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        )

        print("  ‚úÖ IP-based throttling —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

    def test_throttling_configuration_exists(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ throttling –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ.

        –≠—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∑–Ω–∞–Ω–∏—è DRF throttling.
        """
        from django.conf import settings
        from backend.api.views.user_views import UserRegisterView

        print("\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é throttling")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –µ—Å—Ç—å throttle rates
        throttle_rates = settings.REST_FRAMEWORK.get('DEFAULT_THROTTLE_RATES', {})
        self.assertIn('registration', throttle_rates,
                     "–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å scope 'registration'")
        print(f"  ‚úÖ Registration rate: {throttle_rates.get('registration')}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ view –∏–º–µ–µ—Ç throttle_classes
        view = UserRegisterView()
        self.assertTrue(hasattr(view, 'throttle_classes'),
                       "UserRegisterView –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å throttle_classes")
        self.assertTrue(hasattr(view, 'throttle_scope'),
                       "UserRegisterView –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å throttle_scope")

        print(f"  ‚úÖ View throttle classes: {view.throttle_classes}")
        print(f"  ‚úÖ View throttle scope: {view.throttle_scope}")

    def tearDown(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞."""
        cache.clear()